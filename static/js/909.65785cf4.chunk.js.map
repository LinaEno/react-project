{"version":3,"file":"static/js/909.65785cf4.chunk.js","mappings":"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","sources":["components/Balance/Balance.styled.js","components/Balance/Balance.jsx","components/ModalAddTransaction/Toggle.styled.jsx","components/ModalAddTransaction/Toggle.jsx","components/ModalAddTransaction/ModalAddTransaction.styled.jsx","images/svg/baseline-date.svg","components/ModalAddTransaction/ModalAddTransaction.jsx","components/Layout/Layout.jsx","components/Layout/Layout.styled.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  min-width: 280px;\n  height: 80px;\n  padding: 8px 32px;\n  background-color: #fff;\n  border-radius: 30px;\n\n  @media screen and (min-width: 480px) {\n    max-width: 480px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 336px;\n    padding: 8px 40px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 395px;\n  }\n`;\n\nexport const Title = styled.p`\n  margin-bottom: 4px;\n  font-weight: 400;\n  font-size: 12px;\n  line-height: calc(18 / 12);\n  text-transform: uppercase;\n  color: #a6a6a6;\n`;\n\nexport const Text = styled.p`\n  font-weight: 400;\n  font-size: 30px;\n  line-height: calc(45 / 30);\n  color: #000;\n`;\n\nexport const Sign = styled.span`\n  margin-right: 4px;\n`;\n\nexport const Number = styled.span`\n  font-family: 'Poppins';\n  font-weight: 700;\n`;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useSelector } from 'react-redux';\nimport { selectUserBalance } from 'redux/auth/authSelectors';\n// import { TbCurrencyHryvnia } from 'react-icons/tb';\nimport { Number, Sign, Text, Title, Wrapper } from './Balance.styled';\n\nconst Balance = () => {\n  const { t } = useTranslation();\n  const balance = useSelector(selectUserBalance);\n  // const grn = &#8372;\n  return (\n    <Wrapper>\n      <Title>{t('balance.balance')}</Title>\n      <Text>\n        {/* <TbCurrencyHryvnia /> */}\n        <Sign>&#8372;</Sign>\n        <Number>\n          {balance\n            .toFixed(2)\n            .toString()\n            .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ')}\n        </Number>\n      </Text>\n    </Wrapper>\n  );\n};\n\nexport default Balance;\n","import styled from 'styled-components';\n\n\nexport const StyledToggle = styled.button`\n  display: inline-block;\n  position: relative;\n  width: 80px;\n  height: 40px;\n  background-color: rgba(255, 255, 255, 1);\n  border-radius: 25px;\n  cursor: pointer;\n  outline: none;\n  border: 1px solid #E0E0E0;\n  opacity: ${({ disabled }) => (disabled ? '0.6': '1')};\n`;\n\nexport const StyledCircleDiv = styled.div`\n  position: absolute;\n  background-color: ${({ active }) => (active ? '#FF6596': '#24CCA7')};\n  width: 44px;\n  height: 44px;\n  border-radius: 50%;\n  color: rgba(255, 255, 255, 1);\n  font-size: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding-bottom: ${({ active }) => (active ? '5px': '0')};\n  top: -3px;\n  left: ${({ active }) => (active ? '35px' : '-3px')};\n  transition: left 0.2s ease, background-color 0.2s ease;\n  box-shadow: ${({ active }) => (active ? '0px 6px 15px rgba(255, 101, 150, 0.5)' : '0px 6px 15px rgba(36, 204, 167, 0.5)')};\n`;\n\nexport const StyledLabel = styled.label`\n  font-size: 16px;\n  font-weight: bold;\n  font-size: 16px;\n  color: ${({ color }) => color};\n  transition: color 1s ease;\n`\n\nexport const StyledContainer = styled.div`\n  display: flex;\n  gap: 20px;\n  align-items: center;\n  justify-content: center;\n`","import React from 'react';\nimport { useController } from 'react-hook-form';\nimport { StyledToggle, StyledCircleDiv, StyledLabel, StyledContainer} from '../ModalAddTransaction/Toggle.styled';\nimport { useTranslation } from 'react-i18next';\nconst DEFAULT_LABEL_COLOR = '#E0E0E0'\nconst RED_LABEL_COLOR = 'rgba(36, 204, 167, 1)'\nconst GREEN_LABEL_COLOR = 'rgba(255, 101, 150, 1)'\n\nfunction Toggle({ name, control, disabled }) {\n  const { t } = useTranslation();\n  const { field } = useController({\n    name,\n    control,\n    defaultValue: false,\n  });\n\n  const isActive = !!field.value\n\n  const handleClick = (e) => {\n    e.preventDefault();\n\n    if (disabled) {\n      return\n    }\n\n    field.onChange(!field.value);\n  };\n\n  return (\n    <StyledContainer>\n      <StyledLabel color={!isActive ? RED_LABEL_COLOR : DEFAULT_LABEL_COLOR}>{t('modalAddTransactionIncomesType')}</StyledLabel>\n      <StyledToggle active={isActive} disabled={disabled} onClick={handleClick}>\n        <StyledCircleDiv active={isActive}>{isActive ? 'â€“' : '+'}</StyledCircleDiv>\n      </StyledToggle>\n      <StyledLabel color={isActive ? GREEN_LABEL_COLOR : DEFAULT_LABEL_COLOR}>{t('modalAddTransactionOutcomesType')}</StyledLabel>\n    </StyledContainer>\n  );\n}\n\nexport default Toggle;\n","import styled from 'styled-components';\nimport Datetime from 'react-datetime';\n\nexport const Section = styled.section`\n  min-width: 280px;\n  /* height: 560px; */\n  @media screen and (min-width: 768px) {\n    min-width: 0;\n    width: 460px;\n    min-height: 508px;\n  }\n`;\n\nexport const TitleH2 = styled.h2`\n  font-family: 'Poppins';\n  font-weight: 400;\n  font-size: 24px;\n  line-height: 1.5;\n  text-align: center;\n  margin-top: 20px;\n  margin-bottom: 40px;\n  @media screen and (min-width: 480px) {\n  }\n  @media screen and (min-width: 768px) {\n    font-size: 30px;\n    margin-top: 0;\n  }\n  @media screen and (min-width: 1200px) {\n  }\n`;\n\nexport const Forma = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n  @media screen and (min-width: 768px) {\n  }\n`;\n\nexport const ToggleContainer = styled.div`\n  /* margin-top: 30px; */\n  margin: 0 auto;\n  text-align: center;\n  @media screen and (min-width: 768px) {\n  }\n`;\n\nexport const Select = styled.select`\n  padding-left: 20px;\n  font-family: 'Circe';\n  font-size: 18px;\n  line-height: 1.5;\n  width: 100%;\n  /* min-width: 280px; */\n  width: 280px;\n  height: 32px;\n  margin-top: 30px;\n  /* margin-bottom: 30px; */\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  border-bottom: 1px solid #e0e0e0;\n  @media screen and (min-width: 480px) {\n    width: 394px;\n  }\n  @media screen and (min-width: 768px) {\n    width: 394px;\n  }\n  &:required:invalid {\n    color: gray;\n  }\n`;\nexport const Options = styled.option`\n  padding-left: 20px;\n  padding-bottom: 5px;\n  font-family: 'Circe';\n  font-size: 18px;\n  line-height: 1.5;\n  /* color: red; */\n  & .one {\n    /* color: #c3c3c4; */\n  }\n`;\n\nexport const ContainAmountDatetime = styled.div`\n  /* margin-top: 30px; */\n  /* width: 100%; */\n  @media screen and (min-width: 768px) {\n    width: 394px;\n    display: flex;\n    justify-content: space-between;\n    /* margin-top: 30px; */\n  }\n`;\n\nexport const FormInputAmount = styled.input`\n  font-family: 'Circe';\n  padding-left: 20px;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 1.5;\n  width: 100%;\n  /* min-width: 280px; */\n  width: 280px;\n  height: 32px;\n  margin-top: 30px;\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  border-bottom: 1px solid #e0e0e0;\n  @media screen and (min-width: 480px) {\n    width: 394px;\n  }\n  @media screen and (min-width: 768px) {\n    min-width: 0;\n    width: 190px;\n  }\n`;\n\nexport const DateInput = styled(Datetime)`\n  & .form-control {\n    padding-left: 20px;\n    font-family: 'Circe';\n    font-weight: 400;\n    font-size: 18px;\n    line-height: 1.5;\n    width: 100%;\n    /* min-width: 250px; */\n    width: 250px;\n    height: 32px;\n    margin-top: 30px;\n    border-top: none;\n    border-left: none;\n    border-right: none;\n    border-bottom: 1px solid #e0e0e0;\n    @media screen and (min-width: 480px) {\n      width: 375px;\n    }\n    @media screen and (min-width: 768px) {\n      min-width: 0;\n      width: 160px;\n    }\n  }\n`;\nexport const Icon = styled.img`\n  width: 24px;\n  height: 24px;\n`;\nexport const ContIcon = styled.div`\n  margin-top: 30px;\n  height: 32px;\n  border-bottom: 1px solid #e0e0e0;\n`;\n\nexport const ContainerDate = styled.div`\n  display: flex;\n`;\n\nexport const FormInputComment = styled.textarea`\n  font-family: 'Circe';\n  font-size: 18px;\n  line-height: 1.5;\n  width: 100%;\n  min-width: 280px;\n  height: 84px;\n  margin-top: 30px;\n  padding-left: 10px;\n  padding-top: 0px;\n  text-align: left;\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  border-bottom: 1px solid #e0e0e0;\n  @media screen and (min-width: 480px) {\n    width: 394px;\n  }\n  @media screen and (min-width: 768px) {\n    min-width: 394px;\n    height: 32px;\n  }\n`;\n\nexport const AddButtonForm = styled.button`\n  width: 300px;\n  height: 50px;\n  padding: 13px;\n  background-color: #24cca7;\n  border-radius: 20px;\n  border: none;\n  /* font-family: 'Circe'; */\n  font-size: 18px;\n  line-height: 1.5;\n  text-align: center;\n  text-transform: uppercase;\n  color: #ffffff;\n  margin-top: 30px;\n  /* margin: 20px auto 0; */\n  &:hover {\n    border: 1px solid #4a56e2;\n    background-color: #4a56e2;\n    color: #fff;\n  }\n`;\n\nexport const CloseButtonForm = styled.button`\n  width: 300px;\n  height: 50px;\n  padding: 13px;\n  background-color: #ffffff;\n  border-radius: 20px;\n  border: 1px solid #4a56e2;\n  /* font-family: 'Circe'; */\n  font-size: 18px;\n  line-height: 1.5;\n  text-align: center;\n  text-transform: uppercase;\n  color: #4a56e2;\n  margin-top: 10px;\n  /* margin: 20px auto 0; */\n  &:hover {\n    border: 1px solid #4a56e2;\n    background-color: #4a56e2;\n    color: #fff;\n  }\n`;\n","var _g, _defs;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgBaselineDate(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip0_1_2999)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9 11H7V13H9V11ZM13 11H11V13H13V11ZM17 11H15V13H17V11ZM19 4H18V2H16V4H8V2H6V4H5C3.89 4 3.01 4.9 3.01 6L3 20C3 21.1 3.89 22 5 22H19C20.1 22 21 21.1 21 20V6C21 4.9 20.1 4 19 4ZM19 20H5V9H19V20Z\",\n    fill: \"#4A56E2\"\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip0_1_2999\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 24,\n    height: 24,\n    fill: \"white\"\n  })))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgBaselineDate);\nexport default __webpack_public_path__ + \"static/media/baseline-date.8383de23f9120e388bdb64acb9b9786a.svg\";\nexport { ForwardRef as ReactComponent };","import { Controller, useForm } from 'react-hook-form';\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addTransaction } from 'redux/transactions/operations';\nimport { selectCategories } from 'redux/transactions/selectors';\nimport { updateTransaction } from 'redux/transactions/operations';\nimport Toggle from './Toggle';\nimport { selectModalTransactionData } from 'redux/global/selectors';\n\nimport { closeModalAddTransaction } from 'redux/global/slice';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport 'moment/locale/uk';\nimport moment from 'moment';\nimport 'react-datetime/css/react-datetime.css';\n\nimport {\n  AddButtonForm,\n  CloseButtonForm,\n  ContainAmountDatetime,\n  ContainerDate,\n  DateInput,\n  Forma,\n  Options,\n  FormInputAmount,\n  FormInputComment,\n  Icon,\n  Section,\n  Select,\n  TitleH2,\n  ToggleContainer,\n  ContIcon,\n} from './ModalAddTransaction.styled';\n\nimport dateSvg from 'images/svg/baseline-date.svg';\nimport { Error } from 'components/RegistrationForm/Registration.styled';\n\nconst INCOME_STR = 'INCOME';\nconst EXPENSE_STR = 'EXPENSE';\n\nconst BOOLEAN_TO_TRANSACTION_TYPE = {\n  false: INCOME_STR,\n  true: EXPENSE_STR,\n};\nconst schema = yup.object({\n  transactionDate: yup.date().default(() => new Date()),\n  comment: yup\n    .string()\n    .max(40, 'Ð¡omment cannot exceed more than 40 characters'),\n});\n\nexport default function ModalAddTransaction() {\n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n  const categories = useSelector(selectCategories);\n  const modalTransactionData = useSelector(selectModalTransactionData);\n\n  const isEdit = !!modalTransactionData;\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    reset,\n    control,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(schema),\n    defaultValues: {\n      type: isEdit\n        ? modalTransactionData?.category?.type === EXPENSE_STR\n        : true,\n      amount: Math.abs(modalTransactionData?.amount),\n      transactionDate: modalTransactionData?.transactionDate ?? new Date(),\n      comment: modalTransactionData?.comment,\n      categoryId: modalTransactionData?.categoryId,\n    },\n  });\n\n  const { type } = watch();\n\n  const options = categories.filter(category => {\n    return category.type === BOOLEAN_TO_TRANSACTION_TYPE[type];\n  });\n\n  const onSubmit = ({ transactionDate, type, categoryId, comment, amount }) => {\n    const typeOftransaction = BOOLEAN_TO_TRANSACTION_TYPE[type];\n\n    if (isEdit) {\n      dispatch(\n        updateTransaction({\n          id: modalTransactionData.id,\n          amount: type === INCOME_STR ? Number(amount) : -Number(amount),\n          comment,\n        })\n      );\n    } else {\n      dispatch(\n        addTransaction({\n          transactionDate,\n          type: typeOftransaction,\n          categoryId:\n            typeOftransaction === INCOME_STR ? options[0].id : categoryId,\n          comment,\n          amount:\n            typeOftransaction === INCOME_STR ? Number(amount) : -Number(amount),\n        })\n      );\n    }\n    reset();\n    dispatch(closeModalAddTransaction());\n  };\n\n  const today = moment();\n  const disableFutureDt = current => {\n    return current.isBefore(today);\n  };\n  return (\n    <Section>\n      <TitleH2 style={{ textAlign: 'center' }}>\n        {isEdit ? 'Edit transaction' : 'Add transaction'}\n      </TitleH2>\n      <Forma\n        onSubmit={handleSubmit(onSubmit)}\n        autoComplete=\"off\"\n        style={{ display: 'flex', flexDirection: 'column', gap: '10px' }}\n      >\n        <ToggleContainer>\n          <Toggle name=\"type\" control={control} disabled={isEdit} />\n        </ToggleContainer>\n\n        {BOOLEAN_TO_TRANSACTION_TYPE[type] === EXPENSE_STR && (\n          <Select disabled={isEdit} {...register('categoryId')}>\n            <Options className=\"one\" value=\"\" disabled selected hidden>\n              Select category\n            </Options>\n            {options.map(category => {\n              return (\n                <Options key={category.id} value={category.id}>\n                  {t(`categories.${category.name}`)}\n                </Options>\n              );\n            })}\n          </Select>\n        )}\n        <ContainAmountDatetime>\n          <label>\n            <FormInputAmount\n              type=\"number\"\n              {...register('amount')}\n              placeholder=\"0.00\"\n            />\n          </label>\n          {errors?.amount && <Error style={{}}>{errors.amount.message}</Error>}\n          <ContainerDate>\n            <Controller\n              control={control}\n              name=\"transactionDate\"\n              required\n              render={({ field }) => {\n                const { onChange, name, value } = field;\n                return (\n                  <DateInput\n                    className=\"\"\n                    value={new Date(value)}\n                    viewMode=\"time\"\n                    initialValue={Date.now()}\n                    dateFormat={true}\n                    timeFormat={false}\n                    isValidDate={disableFutureDt}\n                    closeOnSelect={true}\n                    inputProps={{\n                      disabled: isEdit,\n                    }}\n                    onChange={moment => {\n                      onChange({\n                        target: {\n                          name,\n                          value: moment.toISOString(),\n                        },\n                      });\n                    }}\n                  />\n                );\n              }}\n            />\n            <ContIcon>\n              <Icon src={dateSvg} alt=\"\" />\n            </ContIcon>\n          </ContainerDate>\n        </ContainAmountDatetime>\n        <label>\n          <FormInputComment\n            type=\"text\"\n            {...register('comment')}\n            maxlength=\"40\"\n            placeholder={t('modalAddTransactionComment')}\n          />\n        </label>\n        {errors?.comment && <Error style={{}}>{errors.comment.message}</Error>}\n        <AddButtonForm type=\"submit\">\n          {t('modalAddTransactionAcceptBtn')}\n        </AddButtonForm>\n\n        <CloseButtonForm\n          type=\"button\"\n          onClick={() => dispatch(closeModalAddTransaction())}\n        >\n          {t('modalAddTransactionCancelBtn')}\n        </CloseButtonForm>\n      </Forma>\n    </Section>\n  );\n}\n","import { Header } from 'components/Header/Header';\nimport ModalAddTransaction from 'components/ModalAddTransaction/ModalAddTransaction';\nimport { ModalContainer } from 'components/ModalContainer/ModalContainer';\nimport ModalLogout from 'components/ModalLogout/ModalLogout';\nimport { useSelector } from 'react-redux';\nimport {\n  selectLogoutModalOpen,\n  selectModalAddTransactionOpen,\n} from 'redux/global/selectors';\n\nconst Layout = () => {\n  const isModalAddTransactionOpen = useSelector(selectModalAddTransactionOpen);\n  const isModalLogoutOpen = useSelector(selectLogoutModalOpen);\n  return (\n    <div>\n      <Header />\n      {isModalLogoutOpen && (\n        <ModalContainer>\n          <ModalLogout />\n        </ModalContainer>\n      )}\n      {isModalAddTransactionOpen && (\n        <ModalContainer>\n          <ModalAddTransaction />\n        </ModalContainer>\n      )}\n    </div>\n  );\n};\n\nexport default Layout;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  @media screen and (min-width: 768px) {\n    display: flex;\n  }\n\n  @media screen and (min-width: 1280px) {\n    flex-direction: column;\n    width: 480px;\n    border-right: 1px solid #e7e5f2;\n    box-shadow: 1px 0px 0px rgba(0, 0, 0, 0.05),\n      1px 0px 0px rgba(255, 255, 255, 0.6);\n  }\n`;\n\nexport const Box = styled.div`\n  @media screen and (min-width: 768px) {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n  }\n\n  /* @media screen and (min-width: 1280px) {\n    max-width: 395px;\n  } */\n`;\n"],"names":["Wrapper","styled","Title","Text","Sign","Number","t","useTranslation","balance","useSelector","selectUserBalance","toFixed","toString","replace","StyledToggle","disabled","StyledCircleDiv","active","StyledLabel","color","StyledContainer","DEFAULT_LABEL_COLOR","name","control","field","useController","defaultValue","isActive","value","onClick","e","preventDefault","onChange","Section","TitleH2","Forma","ToggleContainer","Select","Options","ContainAmountDatetime","FormInputAmount","DateInput","Datetime","Icon","ContIcon","ContainerDate","FormInputComment","AddButtonForm","CloseButtonForm","INCOME_STR","EXPENSE_STR","BOOLEAN_TO_TRANSACTION_TYPE","false","true","schema","yup","transactionDate","default","Date","comment","max","ModalAddTransaction","dispatch","useDispatch","categories","selectCategories","modalTransactionData","selectModalTransactionData","isEdit","useForm","resolver","yupResolver","defaultValues","type","category","amount","Math","abs","categoryId","register","handleSubmit","watch","reset","errors","formState","options","filter","today","moment","disableFutureDt","current","isBefore","style","textAlign","onSubmit","typeOftransaction","updateTransaction","id","addTransaction","closeModalAddTransaction","autoComplete","display","flexDirection","gap","className","selected","hidden","map","placeholder","message","required","render","viewMode","initialValue","now","dateFormat","timeFormat","isValidDate","closeOnSelect","inputProps","target","toISOString","src","dateSvg","alt","maxlength","isModalAddTransactionOpen","selectModalAddTransactionOpen","isModalLogoutOpen","selectLogoutModalOpen","Header","ModalContainer","ModalLogout","Box"],"sourceRoot":""}