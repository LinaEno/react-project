{"version":3,"file":"static/js/131.de0d827e.chunk.js","mappings":"sMAoBA,IAfA,SAA0BA,EAAWC,GAYnC,OAX2B,SAAAC,GACzB,IAAMC,GAAaC,EAAAA,EAAAA,IAAYC,EAAAA,IACzBC,GAAeF,EAAAA,EAAAA,IAAYG,EAAAA,IAEjC,OAAOJ,IAAeG,GACpB,SAACN,GAAD,UAAeE,KAEf,SAAC,KAAD,CAAUM,GAAIP,GAEjB,CAGF,C,uGCKD,WAAeQ,EAAAA,EAAAA,IAhBO,WACpB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAOR,EAAAA,EAAAA,IAAYS,EAAAA,IAOzB,OALAC,EAAAA,EAAAA,YAAU,WACK,OAATF,GACJF,GAASK,EAAAA,EAAAA,MACV,GAAE,CAACL,EAAUE,KAGZ,0BACE,SAAC,KAAD,KAGL,GAE8C,S","sources":["hoc/WithAuthRedirect.jsx","pages/DashboardPage/DashboardPage.jsx"],"sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport { selectIsLoggedIn, selectRefreshed } from 'redux/auth/authSelectors';\n\nfunction WithAuthRedirect(Component, navigateTo) {\n  const ProtectedComponent = props => {\n    const isLoggedIn = useSelector(selectIsLoggedIn);\n    const isRefreshing = useSelector(selectRefreshed);\n\n    return isLoggedIn && !isRefreshing ? (\n      <Component {...props} />\n    ) : (\n      <Navigate to={navigateTo} />\n    );\n  };\n\n  return ProtectedComponent;\n}\n\nexport default WithAuthRedirect;\n","import WithAuthRedirect from 'hoc/WithAuthRedirect';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Outlet } from 'react-router-dom';\nimport { getUserName } from 'redux/auth/authSelectors';\nimport { fetchTransactions } from 'redux/transactions/operations';\n\nconst DashboardPage = () => {\n  const dispatch = useDispatch();\n  const user = useSelector(getUserName);\n\n  useEffect(() => {\n    if (user === null) return;\n    dispatch(fetchTransactions());\n  }, [dispatch, user]);\n\n  return (\n    <div>\n      <Outlet />\n    </div>\n  );\n};\n\nexport default WithAuthRedirect(DashboardPage, '/login');\n"],"names":["Component","navigateTo","props","isLoggedIn","useSelector","selectIsLoggedIn","isRefreshing","selectRefreshed","to","WithAuthRedirect","dispatch","useDispatch","user","getUserName","useEffect","fetchTransactions"],"sourceRoot":""}