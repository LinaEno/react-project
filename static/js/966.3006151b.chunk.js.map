{"version":3,"file":"static/js/966.3006151b.chunk.js","mappings":"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","sources":["components/Chart/Chart.styled.jsx","components/Chart/Chart.jsx","components/StatisticBox/StatisticBox.styled.jsx","components/StatisticBox/StatisticBox.jsx","pages/SummaryPage/SummaryPage.styled.jsx","pages/SummaryPage/SummaryPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Doughnut } from 'react-chartjs-2';\n\nexport const DoughnutBox = styled(Doughnut)`\n  width: 100%;\n  display: flex;\n  flex-direction: column-reverse;\n`;\n\nexport const ChartContainer = styled.div`\n  width: 280px;\n  height: 280px;\n  position: relative;\n  display: grid;\n  place-items: center;\n  @media screen and (min-width: 768px) {\n    margin-top: 20px;\n    width: 336px;\n  height: 336px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    margin-top: 0;\n    width: 288px;\n  height: 288px;\n  }\n`;\n\nexport const ChartLabel = styled.p`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  z-index: -1;\n  /* font-family: Circle; */\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 27px;\n`;\n","import React from 'react';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { DoughnutBox, ChartContainer, ChartLabel } from './Chart.styled';\nimport { useSelector } from 'react-redux';\nimport { selectPeriodTotal, selectSummary } from 'redux/transactions/selectors';\n\nChartJS.register(ArcElement, Tooltip, Legend);\n\nChartJS.overrides.doughnut.plugins = {\n  ...ChartJS.overrides.doughnut.plugins,\n  legend: {\n    display: false,\n  },\n};\n\nexport function Chart() {\n  const total = useSelector(selectPeriodTotal);\n  const summary = useSelector(selectSummary);\n\n  const expenses = summary.filter(el => el.total < 0);\n\n  const data = {\n    labels: expenses.map(el => el.name),\n    datasets: [\n      {\n        data: expenses.map(el => Math.abs(el.total.toString())),\n        backgroundColor: [\n          '#FED057',\n          '#FFD8D0',\n          '#FD9498',\n          '#C5BAFF',\n          '#6E78E8',\n          '#4A56E2',\n          '#81E1FF',\n          '#24CCA7',\n          '#00AD84',\n        ],\n        borderWidth: 0,\n        cutout: '70%',\n      },\n    ],\n    options: {\n      plugins: {\n        legend: {\n          display: true,\n          position: 'bottom',\n        },\n      },\n    },\n  };\n\n  return (\n    <ChartContainer>\n      <DoughnutBox data={data} />\n      <ChartLabel>\n        &#8372;\n        {Math.abs(total)\n          .toFixed(2)\n          .toString()\n          .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ')}\n      </ChartLabel>\n    </ChartContainer>\n  );\n}\n","import styled from 'styled-components';\nimport arrow from '../../images/Arrow.png';\n\nexport const WrapperTable = styled.div`\n  width: 280px;\n\n  @media screen and (min-width: 768px) {\n    width: 336px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 395px;\n  }\n`;\n\nexport const SelectsList = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n\n  @media screen and (min-width: 768px) {\n    flex-wrap: nowrap;\n    gap: 32px;\n    margin-top: -25px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    margin-top: 0;\n  }\n`;\n\nexport const SelectButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background-color: transparent;\n  width: 280px;\n  height: 50px;\n  border-radius: 30px;\n  color: black;\n  border: 1px solid #000000;\n  cursor: pointer;\n  padding: 12px 20px 14px;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 24px;\n\n  &::after {\n    content: url(${arrow});\n    width: 18px;\n    transition: transform 300ms;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 160px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 181px;\n  }\n`;\n\nexport const SelectDate = styled.ul`\n  position: absolute;\n  margin-bottom: 0;\n  padding: 0;\n  /* opacity: 0; */\n  display: none;\n  padding: 8px 0;\n  background-color: #e5e5e5;\n  box-shadow: 0px 6px 15px rgba(0, 0, 0, 0.1);\n  border-radius: 20px;\n  width: 280px;\n  height: auto;\n\n  @media screen and (min-width: 768px) {\n    width: 160px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 181px;\n  }\n`;\n\nexport const Drop = styled.li`\n  padding: 4px 20px;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 24px;\n  color: black;\n  margin-bottom: 8px;\n  text-decoration: none;\n  display: block;\n\n  &:hover {\n    background-color: #fff;\n  }\n`;\n\nexport const Table = styled.table`\n  width: 100%;\n  margin-bottom: 16px;\n`;\n\nexport const THead = styled.thead``;\n\nexport const TR = styled.tr`\n  display: flex;\n  justify-content: space-between;\n  padding: 16px 20px;\n  background-color: #fff;\n  border: 1px solid #000;\n  border-radius: 30px;\n`;\n\nexport const TH = styled.th`\n  /* font-family:circle; */\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 27px;\n`;\n\nexport const TableBody = styled.tbody`\n  display: block;\n  width: 100%;\n`;\n\nexport const TableRow = styled.tr`\n  position: relative;\n  display: flex;\n\n  justify-content: space-between;\n  align-items: center;\n  font-family: 'Circe', sans-serif;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 18px;\n  padding: 16px 20px 14px;\n  width: 100%;\n\n  &::after {\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    content: '';\n    width: 100%;\n    height: 1px;\n    background-color: #dcdcdf;\n  }\n`;\n\nexport const Sum = styled.p`\n  /* font-family:circle; */\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 24px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 7px 20px;\n`;\n\nexport const Expenses = styled.span`\n  color: #ff6596;\n`;\n\nexport const Income = styled.span`\n  color: #24cca7;\n`;\n\nexport const Color = styled.td`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  max-width: 180px;\n\n  &::before {\n    content: '';\n    display: inline-block;\n    width: 24px;\n    height: 24px;\n    border-radius: 2px;\n    margin-right: 16px;\n    background-color: ${props => props.color};\n  }\n`;\n\nexport const DropdownMenu = styled.div`\n  position: relative;\n  margin-bottom: 20px;\n  z-index: 100;\n\n  &.dropdownShown {\n    ${SelectDate} {\n      pointer-events: all;\n      /* opacity: 1; */\n      display: block;\n    }\n    & ${SelectButton} {\n      border-color: #000;\n      color: #000;\n      &::after {\n        transform: rotate(180deg);\n        z-index: 2;\n      }\n    }\n  }\n`;\n\nexport const DropdownMenuMonth = styled.div`\n  position: relative;\n  margin-bottom: 20px;\n  z-index: 120;\n\n  &.dropdownShown {\n    ${SelectDate} {\n      pointer-events: all;\n      /* opacity: 1;\n       */\n      display: block;\n    }\n    & ${SelectButton} {\n      border-color: #000;\n      color: #000;\n      &::after {\n        transform: rotate(180deg);\n        z-index: 2;\n      }\n    }\n  }\n`;\n","import React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { summaryTransactions } from 'redux/transactions/operations';\nimport { useTranslation } from 'react-i18next';\nimport {\n  selectExpenseSum,\n  selectIncomeSum,\n  selectSummary,\n  selectTransactions,\n} from 'redux/transactions/selectors';\n\nimport {\n  SelectsList,\n  SelectButton,\n  DropdownMenu,\n  SelectDate,\n  Drop,\n  WrapperTable,\n  Table,\n  THead,\n  TR,\n  TH,\n  TableBody,\n  TableRow,\n  Sum,\n  Expenses,\n  Income,\n  Color,\n  DropdownMenuMonth,\n} from './StatisticBox.styled';\n\nconst months = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\n\nconst colors = [\n  '#FED057',\n  '#FFD8D0',\n  '#FD9498',\n  '#C5BAFF',\n  '#6E78E8',\n  '#4A56E2',\n  '#81E1FF',\n  '#24CCA7',\n  '#00AD84',\n  '#784fca',\n];\n\nexport function StatisticBox() {\n  const { t } = useTranslation();\n  const summary = useSelector(selectSummary);\n  const expense = useSelector(selectExpenseSum);\n  const income = useSelector(selectIncomeSum);\n  const dispatch = useDispatch();\n  const all = useSelector(selectTransactions);\n  let expenses = summary.filter(el => el.total < 0);\n\n  if (expenses.length > 0) {\n    expenses = expenses.map((el, i) => ({\n      ...el,\n      color: colors[i],\n    }));\n  }\n\n  const [monthDropdownShown, setMonthDropdownShown] = useState(false);\n  const [yearDropdownShown, setYearDropdownShown] = useState(false);\n\n  const now = new Date();\n\n  const [month, setMonth] = useState(now.getMonth());\n  const [year, setYear] = useState(now.getFullYear());\n\n  useEffect(() => {\n    dispatch(summaryTransactions({ month: +month + 1, year }));\n  }, [dispatch, month, year, all]);\n\n  function handleMonthChange(e) {\n    setMonth(e.target.dataset.value);\n    toggleMonthDropdown();\n  }\n\n  function handleYearChange(e) {\n    setYear(e.target.dataset.value);\n    toggleYearDropdown();\n  }\n\n  function toggleMonthDropdown() {\n    setMonthDropdownShown(state => !state);\n    setYearDropdownShown(false);\n  }\n\n  function toggleYearDropdown() {\n    setYearDropdownShown(state => !state);\n    setMonthDropdownShown(false);\n  }\n\n  return (\n    <WrapperTable>\n      <SelectsList>\n        <DropdownMenuMonth\n          className={monthDropdownShown ? 'dropdownShown' : ''}\n        >\n          <SelectButton onClick={toggleMonthDropdown}>\n            {months[month]}\n          </SelectButton>\n\n          <SelectDate name=\"month\">\n            <Drop data-value=\"0\" onClick={handleMonthChange}>\n              {t('monthStatJanuary')}\n            </Drop>\n            <Drop data-value=\"1\" onClick={handleMonthChange}>\n              {t('monthStatFebruary')}\n            </Drop>\n            <Drop data-value=\"2\" onClick={handleMonthChange}>\n              {t('monthStatMarch')}\n            </Drop>\n            <Drop data-value=\"3\" onClick={handleMonthChange}>\n              {t('monthStatApril')}\n            </Drop>\n            <Drop data-value=\"4\" onClick={handleMonthChange}>\n              {t('monthStatMay')}\n            </Drop>\n            <Drop data-value=\"5\" onClick={handleMonthChange}>\n              {t('monthStatJune')}\n            </Drop>\n            <Drop data-value=\"6\" onClick={handleMonthChange}>\n              {t('monthStatJuly')}\n            </Drop>\n            <Drop data-value=\"7\" onClick={handleMonthChange}>\n              {t('monthStatAugust')}\n            </Drop>\n            <Drop data-value=\"8\" onClick={handleMonthChange}>\n              {t('monthStatSeptember')}\n            </Drop>\n            <Drop data-value=\"9\" onClick={handleMonthChange}>\n              {t('monthStatOctober')}\n            </Drop>\n            <Drop data-value=\"10\" onClick={handleMonthChange}>\n              {t('monthStatNovember')}\n            </Drop>\n            <Drop data-value=\"11\" onClick={handleMonthChange}>\n              {t('monthStatDecember')}\n            </Drop>\n          </SelectDate>\n        </DropdownMenuMonth>\n        <DropdownMenu className={yearDropdownShown ? 'dropdownShown' : ''}>\n          <SelectButton onClick={toggleYearDropdown}>{year}</SelectButton>\n          <SelectDate name=\"year\">\n            <Drop data-value=\"2019\" onClick={handleYearChange}>\n              2019\n            </Drop>\n            <Drop data-value=\"2020\" onClick={handleYearChange}>\n              2020\n            </Drop>\n            <Drop data-value=\"2021\" onClick={handleYearChange}>\n              2021\n            </Drop>\n            <Drop data-value=\"2022\" onClick={handleYearChange}>\n              2022\n            </Drop>\n            <Drop data-value=\"2023\" onClick={handleYearChange}>\n              2023\n            </Drop>\n          </SelectDate>\n        </DropdownMenu>\n      </SelectsList>\n      <Table>\n        <THead>\n          <TR>\n            <TH>{t('titleTable.transactionsTableCategory')}</TH>\n            <TH>{t('titleTable.transactionsTableAmount')}</TH>\n          </TR>\n        </THead>\n        {expenses.length > 0 && (\n          <TableBody>\n            {expenses.map(el => {\n              return (\n                <TableRow key={el.name}>\n                  <Color color={el.color}>{t(`categories.${el.name}`)}</Color>\n\n                  {/* <Color color={el.color}>{el.name}</Color> */}\n                  <td>\n                    {Math.abs(el.total)\n                      .toFixed(2)\n                      .toString()\n                      .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ')}\n                  </td>\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        )}\n      </Table>\n      <Sum>\n        {t('statisticsExpenses')}\n        <Expenses>\n          {Math.abs(expense)\n            .toFixed(2)\n            .toString()\n            .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ')}\n        </Expenses>\n      </Sum>\n      <Sum>\n        {t('statisticsIncomes')}\n        <Income>\n          {income\n            .toFixed(2)\n            .toString()\n            .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ')}\n        </Income>\n      </Sum>\n    </WrapperTable>\n  );\n}\n","import styled from 'styled-components';\n\nexport const StatisticTitle = styled.h2`\n  font-family: 'Poppins', sans-serif;\n  font-weight: 400;\n  font-size: 30px;\n  line-height: 45px;\n  margin-bottom: 20px;\n  margin-top: 32px;\n  text-align: left;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 0;\n    margin-top: 20px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    margin-bottom: 20px;\n    margin-top: 32px;\n    margin-left: 84px;\n  }\n`;\n\nexport const Wrap = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  gap: 32px;\n\n  height: auto;\n\n  @media screen and (min-width: 768px) {\n    align-items: stretch;\n    flex-direction: row;\n    width: 704px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 715px;\n    margin-right: 16px;\n    margin-left: 69px;\n  }\n`;\n","import { Chart } from 'components/Chart/Chart';\nimport Layout from 'components/Layout/Layout';\nimport { StatisticBox } from 'components/StatisticBox/StatisticBox';\n\nimport { Default, Desktop, Tablet } from 'components/Media/Media';\nimport Navigation from 'components/Navigation/Navigation';\nimport Balance from 'components/Balance/Balance';\nimport { Currency } from 'components/Currency/Currency';\nimport { ContainerTotal } from 'components/Currency/Currency.styled';\nimport { StatisticTitle, Wrap } from './SummaryPage.styled';\nimport { Box, Wrapper } from 'components/Layout/Layout.styled';\nimport { useTranslation } from 'react-i18next';\n\nfunction SummaryPage() {\n  const { t } = useTranslation();\n  return (\n    <>\n      <Layout />\n      <main>\n        <ContainerTotal>\n          <Wrapper>\n            <Box>\n              <Navigation />\n              <Default>\n                <Balance />\n              </Default>\n            </Box>\n            <Tablet>\n              <Currency />\n            </Tablet>\n            <Desktop>\n              <Currency />\n            </Desktop>\n          </Wrapper>\n          <div>\n            <StatisticTitle>{t('statisticsTitle')}</StatisticTitle>\n            <Wrap>\n              <Chart />\n              <StatisticBox />\n            </Wrap>\n          </div>\n        </ContainerTotal>\n      </main>\n    </>\n  );\n}\n\nexport default SummaryPage;\n"],"names":["DoughnutBox","styled","Doughnut","ChartContainer","ChartLabel","Chart","total","useSelector","selectPeriodTotal","expenses","selectSummary","filter","el","data","labels","map","name","datasets","Math","abs","toString","backgroundColor","borderWidth","cutout","options","plugins","legend","display","position","toFixed","replace","ChartJS","ArcElement","Tooltip","Legend","WrapperTable","SelectsList","SelectButton","arrow","SelectDate","Drop","Table","THead","TR","TH","TableBody","TableRow","Sum","Expenses","Income","Color","props","color","DropdownMenu","DropdownMenuMonth","months","colors","StatisticBox","t","useTranslation","summary","expense","selectExpenseSum","income","selectIncomeSum","dispatch","useDispatch","all","selectTransactions","length","i","useState","monthDropdownShown","setMonthDropdownShown","yearDropdownShown","setYearDropdownShown","now","Date","getMonth","month","setMonth","getFullYear","year","setYear","handleMonthChange","e","target","dataset","value","toggleMonthDropdown","handleYearChange","toggleYearDropdown","state","useEffect","summaryTransactions","className","onClick","StatisticTitle","Wrap","Layout","Navigation","Balance","Currency"],"sourceRoot":""}